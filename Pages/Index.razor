@page "/"

@using RedditClientViewer.Data
@inject WeatherForecastService ForecastService

<h1>Reddit Client Viewer @Api.Channel</h1>
<div>
    <button @onclick="@(e => Api.Sort = "hot")">Hot</button>
    <button @onclick="@(e => Api.Sort = "new")">New</button>
    <button @onclick="@(e => Api.Sort = "top")">Top</button>
    <button @onclick="@(e => Api.Sort = "rising")">Rising</button>
</div>
<select @bind="Api.Time">
    <option value="hour">Now</option>
    <option value="day" selected>Today</option>
    <option value="week">This Week</option>
    <option value="month">This Month</option>
    <option value="year">This Year</option>
    <option value="all">All Time</option>
</select>

<p>Url @Api.Url</p>
<p>After @Api.After</p>
<p>Before @Api.Before</p>
<p>Time @Api.Time</p>
<p>Sort @Api.Sort</p>
<p>Channel @Api.Channel</p>
@* <p>Current amount of Posts Loaded @Api.Posts</p> *@


<button @onclick="(() => Api.Update())">Search</button>

@if (Api.Data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
       <button @onclick="(() => Controller.LoadMore())">Load More</button>
       <button @onclick="(() => Controller.GetPostsAsync())">Render Posts</button>
        @* @if (Api.Posts.Count)
        {

        } *@
    </div>  


}

@code {


    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
